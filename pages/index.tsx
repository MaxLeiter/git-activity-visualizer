import type { GetStaticProps, InferGetStaticPropsType, NextPage } from 'next'

import { useState } from 'react'
import Head from 'next/head'

import styles from '@/styles/Home.module.css'
import Intro from '@/components/intro'
import UserInput from '@/components/user-input'
import Footer from '@/components/Footer'

import type { Commits } from './api/fetch-github-events'
import Graphs from '@/components/graphs'
import fetchDefaultCommits from '@/lib/fetch-default-commits'

type Props = {
  commits: Commits
}

const Home: NextPage<Props> = ({ commits: initialCommits }: InferGetStaticPropsType<typeof getStaticProps>) => {
  const [isLoading, setIsLoading] = useState(false)
  const [commits, setCommits] = useState<Commits>(initialCommits ? initialCommits : [])
  const [error, setError] = useState<string | undefined>()

  const handleSubmit = async (username: string) => {
    setError(undefined)
    setIsLoading(true)
    try {
      const commitsByRepo = await fetch(
        `/api/fetch-github-events?username=${username}`
      )
        
      if (!commitsByRepo.ok) {
        const error = await commitsByRepo.json()
        throw new Error(error.error)
      }
      const commitsByRepoJson = await commitsByRepo.json()

      setCommits(commitsByRepoJson.commits)
    }
    catch (e: any) {
      if (e instanceof Error)
        setError(`${e.message}`)
      else
        setError('An unknown error occurred. Check your browser console for more details.')
        console.error(e)
    }
    setIsLoading(false)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>When are you most productive?</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta property="og:title" content="When are you most productive?" />
        <meta property="og:description" content="Visualize your Git contributions" />
        {/* <meta property="og:image" content=" */}
        <meta property="og:url" content="https://git-visualizer.maxleiter.com/" />
        <meta property="og:type" content="website" />
        <meta property="og:site_name" content="Git Visualizer" />
        <meta property="og:locale" content="en_US" />
        {/* <meta property="og:image:width" content="1200" /> */}
        {/* <meta property="og:image:height" content="630" /> */}
      </Head>
    
      <main>
        <Intro />
        <UserInput onSubmit={handleSubmit} error={error} setError={setError}/>
        {isLoading && <p className={styles.loading}>Loading... (this may take a few seconds)</p>}
        {!isLoading && !error && commits.length > 0 && <Graphs commits={commits} />}
      </main>

      <Footer />
    </div>
  )
}

export const getStaticProps: GetStaticProps<Props> = async (context) => {
  const commits = await fetchDefaultCommits()

  return {
    props: {
      commits: commits.commits,
    }
  }
}

export default Home
